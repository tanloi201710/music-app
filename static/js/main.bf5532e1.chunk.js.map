{"version":3,"sources":["components/PlayerControls.js","components/PlayerDetails.js","components/Player.js","App.js","index.js"],"names":["PlayerControls","props","useState","position","setPosition","marginLeft","setMarginLeft","progressBarWidth","setProgressBarWidth","rangeRef","useRef","thumbRef","volumeRef","autoClick","useEffect","rangeWidth","current","getBoundingClientRect","width","thumbWidth","centerThumb","percentage","centerProgressBar","timeFormat","seconds","duration","hours","parseInt","min","sec","isMuted","value","volume","className","style","ref","left","type","step","max","onChange","currentTime","icon","faCompactDisc","onClick","SkipSong","faBackward","setIsPlaying","isPlaying","faPause","faPlay","transform","faForward","muteControl","faVolumeMute","faVolumeUp","onVolumeChange","PlayerDetails","src","song","img_src","alt","title","artist","Player","audio","setDuration","setPercentage","setCurrentTime","setVolume","setIsMuted","useCallback","forwards","setCurrentSongIndex","temp","currentSongIndex","songs","length","playPromise","play","undefined","then","catch","error","console","log","pause","onTimeUpdate","e","percent","currentTarget","toFixed","time","isNaN","onLoadedData","onEnded","audioC","target","muted","nextSongIndex","App","setNextSongIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf5532e1.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBackward, faCompactDisc, faForward, faPause, faPlay, faVolumeMute, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\n\nfunction PlayerControls(props) {\n    const [position,setPosition] = useState(0);\n    const [marginLeft,setMarginLeft] = useState(0);\n    const [progressBarWidth,setProgressBarWidth] = useState(0);\n\n    const rangeRef = useRef();\n    const thumbRef = useRef();\n    const volumeRef = useRef();\n    const autoClick = useRef();\n\n    useEffect(() => {\n        const rangeWidth = rangeRef.current.getBoundingClientRect().width;\n        const thumbWidth = thumbRef.current.getBoundingClientRect().width;\n        const centerThumb = (thumbWidth / 100) * props.percentage * -1;\n        const centerProgressBar =\n            thumbWidth + (rangeWidth / 100) * props.percentage - (thumbWidth / 100) * props.percentage;\n        setPosition(props.percentage);\n        setMarginLeft(centerThumb);\n        setProgressBarWidth(centerProgressBar);\n    }, [props.percentage]);\n\n    const timeFormat = (seconds) => {\n        if(!seconds) return '00:00';\n        let duration = seconds;\n        let hours = parseInt(duration / 3600);\n        duration %= 3600;\n        let min = parseInt(duration / 60);\n        duration %= 60;\n        let sec = parseInt(duration);\n\n        if(sec < 10) sec = `0${sec}`;\n\n        if(min < 10) min = `0${min}`;\n\n        if(hours > 0) {\n            return `${hours}:${min}:${sec}`;\n        } else if(min === 0) {\n            return `00:${sec}`;\n        } else {\n            return `${min}:${sec}`;\n        }\n    };\n\n    useEffect(() => {\n        if(props.isMuted) {\n            volumeRef.current.value = 0;\n        } else {\n            volumeRef.current.value = props.volume;\n        }\n    });\n\n\n    return (\n        <>\n            <div className=\"timer\">\n                <div \n                    className=\"progress-bar-cover\"\n                    style={{ width: `${progressBarWidth}px`}}\n                ></div>\n                <div \n                    className=\"thumb\" \n                    ref={thumbRef}\n                    style={{left: `${position}%`,marginLeft: `${marginLeft}px`}}\n                ></div>\n                <input \n                    type=\"range\" \n                    step=\"0.01\" \n                    className=\"timer-range\" \n                    min=\"0\" \n                    max=\"100\" \n                    value={position} \n                    onChange={props.onChange} \n                    ref={rangeRef}\n                />\n            </div>\n            <div className=\"controlTimes\">\n                <span className=\"time\">{timeFormat(props.currentTime)}</span>\n                <span className=\"time\">{timeFormat(props.duration)}</span>\n            </div>\n            <div className=\"c-player--controls\">\n                <button className=\"playlist-btn\">\n                    <FontAwesomeIcon icon={faCompactDisc} />\n                </button>\n                <button className=\"skip-btn\" onClick={() => props.SkipSong(false)} >\n                    <FontAwesomeIcon icon={faBackward} />\n                </button>\n                <button className=\"play-btn\" onClick={() => props.setIsPlaying(!props.isPlaying)}>\n                    <FontAwesomeIcon icon={props.isPlaying ? faPause : faPlay} style={!props.isPlaying && {transform: 'translate(2px,0px)'}}/>\n                </button>\n                <button className=\"skip-btn\" ref={autoClick} onClick={() => props.SkipSong()} >\n                <FontAwesomeIcon icon={faForward} />\n                </button>\n                <button className=\"volume-btn\" onClick={props.muteControl}>\n                    <FontAwesomeIcon icon={props.isMuted ? faVolumeMute : faVolumeUp} />\n                </button>\n                <div className=\"volumeSlider\">\n                    <input \n                        type=\"range\" \n                        className=\"volumeRange\" \n                        min=\"0\" \n                        max=\"100\"\n                        onChange={props.onVolumeChange} \n                        ref={volumeRef}\n                    />\n                    <div className=\"cover\">\n                        <span className=\"progress\" style={{width: `${volumeRef?.current?.value ? volumeRef.current.value : props.volume}%`}}></span>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default PlayerControls\n","import React from 'react'\r\n\r\nfunction PlayerDetails(props) {\r\n    return (\r\n        <div className=\"c-player--details\">\r\n            <div className={props.isPlaying ? \"details-img rotate-player\" : \"details-img\"}>\r\n                <img src={props.song.img_src} alt=\"\" />\r\n            </div>\r\n            <h3 className=\"details-title\">{props.song.title}</h3>\r\n            <h4 className=\"details-artist\">{props.song.artist}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerDetails\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport PlayerControls from './PlayerControls'\r\nimport PlayerDetails from './PlayerDetails'\r\n\r\nfunction Player(props) {\r\n    const audio = useRef(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [duration, setDuration] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [volume, setVolume] = useState(0);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    //const [prevVolume,setPreVolume] = useState(0);\r\n\r\n    const SkipSong = useCallback((forwards = true) => {\r\n        if (forwards) {\r\n            props.setCurrentSongIndex(() => {\r\n                let temp = props.currentSongIndex;\r\n                temp++;\r\n\r\n                if (temp > props.songs.length - 1) {\r\n                    temp = 0;\r\n                };\r\n\r\n                return temp;\r\n            });\r\n            setPercentage(0);\r\n        } else {\r\n            props.setCurrentSongIndex(() => {\r\n                let temp = props.currentSongIndex;\r\n                temp--;\r\n\r\n                if (temp < 0) {\r\n                    temp = props.songs.length - 1;\r\n                };\r\n\r\n                return temp;\r\n            });\r\n            setPercentage(0);\r\n        }\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            const playPromise = audio.current.play();\r\n            if (playPromise !== undefined) {\r\n                playPromise.then().catch((error) => console.log(error));\r\n            }\r\n        } else {\r\n            audio.current.pause();\r\n        }\r\n    }, [SkipSong, isPlaying]);\r\n\r\n\r\n\r\n\r\n    const getCurrDuration = (e) => {\r\n        const percent = ((e.currentTarget.currentTime / e.currentTarget.duration) * 100).toFixed(2);\r\n        const time = e.currentTarget.currentTime;\r\n\r\n        if (!isNaN(percent)) setPercentage(+percent);\r\n\r\n        setCurrentTime(time.toFixed(2));\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const audioC = audio.current;\r\n        audioC.currentTime = (audioC.duration / 100) * e.target.value;\r\n        setPercentage(e.target.value);\r\n    };\r\n\r\n    const onVolumeChange = (e) => {\r\n        const audioC = audio.current;\r\n        audioC.volume = (e.target.value / 100).toFixed(2);\r\n        setVolume(e.target.value);\r\n    };\r\n\r\n    const muteControl = () => {\r\n        const audioC = audio.current;\r\n        audioC.muted = !isMuted;\r\n        setIsMuted(!isMuted);\r\n    };\r\n\r\n    return (\r\n        <div className=\"c-player\">\r\n            <audio\r\n                src={props.songs[props.currentSongIndex].src}\r\n                ref={audio}\r\n                onTimeUpdate={getCurrDuration}\r\n                onLoadedData={(e) => {\r\n                    setDuration(e.currentTarget.duration.toFixed(2));\r\n                    setVolume(e.currentTarget.volume * 100);\r\n                }}\r\n                onEnded={() => SkipSong()}\r\n            ></audio>\r\n            <h4>Đang phát</h4>\r\n            <PlayerDetails\r\n                song={props.songs[props.currentSongIndex]}\r\n                isPlaying={isPlaying}\r\n            />\r\n            <PlayerControls\r\n                isPlaying={isPlaying}\r\n                setIsPlaying={setIsPlaying}\r\n                SkipSong={SkipSong}\r\n                percentage={percentage}\r\n                onChange={onChange}\r\n                duration={duration}\r\n                currentTime={currentTime}\r\n                volume={volume}\r\n                onVolumeChange={onVolumeChange}\r\n                isMuted={isMuted}\r\n                muteControl={muteControl}\r\n            />\r\n            <p><strong>Tiếp theo:</strong> {props.songs[props.nextSongIndex].title} by {props.songs[props.nextSongIndex].artist}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import { useEffect, useState } from 'react';\nimport Player from './components/Player';\n\nimport './glass.css';\n\n\nfunction App() {\n  const [songs] = useState([\n    {\n      title: 'Rồi Tới Luôn',\n      artist: 'Nal',\n      img_src: './assets/roitoiluon.jpg',\n      src: './sounds/RoiToiLuon.flac'\n    },\n    {\n      title: '3107-3',\n      artist: 'W/n - Duongg - Nâu - Titie',\n      img_src: './assets/3107-3.jpg',\n      src: './sounds/3107-3.flac'\n    },\n    {\n      title: 'Qua Khung Cửa Sổ',\n      artist: 'Chillies',\n      img_src: './assets/quakhungcuaso.jpg',\n      src: './sounds/QuaKhungCuaSo.flac'\n    },\n    {\n      title: 'Vùng Ký Ức',\n      artist: 'Chillies',\n      img_src: './assets/vungkyuc.jpg',\n      src: './sounds/VungKyUc.flac'\n    },\n    {\n      title: 'Trốn Tìm',\n      artist: 'Đen - MTV',\n      img_src: './assets/trontim.jpg',\n      src: './sounds/TronTim.flac'\n    },\n    {\n      title: 'East Of Eden',\n      artist: 'someone',\n      img_src: './assets/eastofeden.jpg',\n      src: './sounds/EastOfEden.flac'\n    },\n    {\n      title: 'Thunder',\n      artist: 'Gabry Ponte - LUM!X - Prezioso',\n      img_src: './assets/thunder.jpg',\n      src: './sounds/Thunder.mp3'\n    }\n  ]);\n\n  const [currentSongIndex,setCurrentSongIndex] = useState(0);\n  const [nextSongIndex,setNextSongIndex] = useState(currentSongIndex + 1);\n  \n  useEffect(() => {\n    setNextSongIndex(() => {\n      if(currentSongIndex + 1 > songs.length - 1) {\n        return 0;\n      } else {\n        return currentSongIndex + 1;\n      }\n    })\n  }, [currentSongIndex,songs.length]);\n\n  \n  return (\n      <div className=\"App\" >\n        <Player \n          currentSongIndex={currentSongIndex}\n          setCurrentSongIndex={setCurrentSongIndex}\n          nextSongIndex={nextSongIndex}\n          songs={songs}\n        />\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}